// swiftlint:disable:next type_body_length
public enum SoftwareKeyboards: String, LaunchArgumentValue {
	case Arabic = "ar@sw=Arabic"
	case BulgarianBulgaria = "bg_BG@sw=Bulgarian"
	case Bengali = "bn@sw=Bengali"
	case Tibetan = "bo@sw=Tibetan"
	case CatalanSpain = "ca_ES@sw=QWERTY-Catalan"
	case Cherokee = "chr@sw=Cherokee"
	case CzechCzechRepublic = "cs_CZ@sw=Czech-Slovak"
	case WelshUnitedKingdom = "cy_GB@sw=QWERTY"
	case DanishDenmark = "da_DK@sw=QWERTY-Danish"
	case GermanAustria = "de_AT@sw=QWERTZ-German"
	case GermanGermany = "de_DE@sw=QWERTZ-German"
	case GermanSwitzerland = "de_CH@sw=QWERTZ-German"
	case GreekGreece = "el_GR@sw=Greek"
	case EnglishCanada = "en_CA@sw=QWERTY"
	case EnglishAustralia = "en_AU@sw=QWERTY"
	case EnglishSingapore = "en_SG@sw=QWERTY"
	case EnglishUnitedStates = "en_US@sw=QWERTY"
	case EnglishUnitedKingdom = "en_GB@sw=QWERTY"
	case EnglishJapan = "en_JP@sw=QWERTY"
	case EnglishIndia = "en_IN@sw=QWERTY"
	case SpanishSpain = "es_ES@sw=QWERTY-Spanish"
	case SpanishMexico = "es_MX@sw=QWERTY-Spanish"
	case EstonianEstonia = "et_EE@sw=QWERTY"
	case Persian = "fa@sw=Persian"
	case FinnishFinland = "fi_FI@sw=QWERTY-Swedish-Finnish"
	case FrenchBelgium = "fr_BE@sw=AZERTY-French"
	case FrenchFrance = "fr_FR@sw=AZERTY-French"
	case FrenchCanada = "fr_CA@sw=QWERTY-Accents"
	case FrenchSwitzerland = "fr_CH@sw=QWERTZ-Accents"
	case IrishIreland = "ga_IE@sw=QWERTY"
	case Gujarati = "gu@sw=Gujarati"
	case Hawaiian = "haw@sw=QWERTY-Hawaiian"
	case HebrewIsrael = "he_IL@sw=Hebrew"
	case Hindi = "hi@sw=Devanagari-Hindi"
	case HindiTRANSLIT = "hi-Translit@sw=QWERTY-Hindi"
	case HindiLatin = "hi_Latn@sw=QWERTY"
	case CroatianCroatia = "hr_HR@sw=QWERTZ"
	case HungarianHungary = "hu_HU@sw=QWERTZ"
	case IndonesianIndonesia = "id_ID@sw=QWERTY"
	case IcelandicIceland = "is_IS@sw=Icelandic"
	case ItalianItaly = "it_IT@sw=QWERTY"
	case JapaneseJapanKANA = "ja_JP-Kana@sw=Kana"
	case JapaneseJapanROMAJI = "ja_JP-Romaji@sw=QWERTY-Japanese"
	case JapaneseJapan = "ja_JP@sw=Kana"
	case Georgian = "ka@sw=Georgian-Phonetic"
	case KoreanSouthKorea = "ko_KR@sw=Korean"
	case LithuanianLithuania = "lt_LT@sw=QWERTY"
	case LatvianLatvia = "lv_LV@sw=QWERTY"
	case MacedonianMacedonia = "mk_MK@sw=Macedonian"
	case Marathi = "mr@sw=Devanagari-Marathi"
	case MalayMalaysia = "ms_MY@sw=QWERTY"
	case NorwegianBokm√•lNorway = "nb_NO@sw=QWERTY-Norwegian"
	case DutchBelgium = "nl_BE@sw=AZERTY"
	case DutchNetherlands = "nl_NL@sw=QWERTY"
	case Punjabi = "pa@sw=Punjabi-Phonetic"
	case PolishPoland = "pl_PL@sw=QWERTY"
	case PortugueseBrazil = "pt_BR@sw=QWERTY"
	case PortuguesePortugal = "pt_PT@sw=QWERTY"
	case RomanianRomania = "ro_RO@sw=QWERTY"
	case RussianRussia = "ru_RU@sw=Russian"
	case SlovakSlovakia = "sk_SK@sw=Czech-Slovak"
	case SlovenianSlovenia = "sl_SI@sw=QWERTZ"
	case SerbianCyrillic = "sr_Cyrl@sw=Serbian-Cyrillic"
	case SerbianLatin = "sr_Latn@sw=QWERTY"
	case SwedishSweden = "sv_SE@sw=QWERTY-Swedish-Finnish"
	case Tamil = "ta@sw=Tamil"
	case Telugu = "te@sw=Telugu"
	case ThaiThailand = "th_TH@sw=Thai"
	case TagalogPhilippines = "tl_PH@sw=QWERTY"
	case TurkishTurkey = "tr_TR@sw=Turkish-Q"
	case UkrainianUkraine = "uk_UA@sw=Ukrainian"
	case Urdu = "ur@sw=Urdu"
	case VietnameseVietnam = "vi_VN@sw=QWERTY"
	case ChineseSimplifiedPinyinRomanization = "zh_Hans-Pinyin@sw=Pinyin-Simplified"
	case ChineseTraditionalZHUYIN = "zh_Hant-Zhuyin@sw=Zhuyin"
	case ChineseSimplifiedWUBIHUA = "zh_Hans-Wubihua@sw=Wubihua-Simplified"
	case ChineseTraditionalHWR = "zh_Hant-HWR@sw=HWR-Traditional"
	case ChineseTaiwan = "zh_TW@sw=Zhuyin"
	case ChineseTraditionalCANGJIE = "zh_Hant-Cangjie@sw=Cangjie"
	case ChineseTraditionalWUBIHUA = "zh_Hant-Wubihua@sw=Wubihua-Traditional"
	case ChineseTraditionalPinyinRomanization = "zh_Hant-Pinyin@sw=Pinyin-Traditional"
	case ChineseSimplifiedHWR = "zh_Hans-HWR@sw=HWR-Simplified"
	case ChineseTraditionalSUCHENG = "zh_Hant-Sucheng@sw=Sucheng"
	case ChineseChina = "zh_CN@sw=Pinyin-Simplified"
}
